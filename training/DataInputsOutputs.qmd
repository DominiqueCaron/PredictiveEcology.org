---
title       : "Data Inputs and Outputs"
author      : "Eliot McIntire"
date        : "May 2024"
editor_options:
  chunk_output_type: console
---


```{r setup}
#| include: false
knitr::opts_chunk$set(tidy = FALSE, 
                      eval = FALSE,
                      warning = FALSE, 
                      message = FALSE, 
                      error = FALSE)

## truncate text output
hook_output <- knitr::knit_hooks$get("output")

knitr::knit_hooks$set(output = function(y, options) {
  if (!is.null(n <- options$outlines)) {
    y <- xfun::split_lines(y)
    if (length(y) > n) {
      # truncate the output
      y <- c(head(y, n), "....\n")
    }
    y <- paste(y, collapse = "\n")
  }
  hook_output(y, options)
})

options(repos = "http://cran.us.r-project.org")
if (!require("Require")) {
  install.packages("Require", repos = c("https://predictiveecology.r-universe.dev", getOption("repos")))
}

```

We have seen functions called `.inputObjects` and `reproducible::prepInputs` that help deal with [Inputs Tip @tip-Inputs]. We will show these used within a SpaDES module.

::: {#tip-Inputs .callout-tip}
**Inputs** in a SpaDES module should be any R object that is needed for the module to run. These should be used in the `sim` using e.g., `sim$` somewhere in the module and should be specified in the `inputObjects` part of the metadata. 
:::

### `.inputObjects`

When 


#### Advanced example

In the Biomass_core module (this is an implementation of the LANDIS-II Biomass Succession Extension), there are many **Inputs** as defined in the *metadata*. The module needs each one of these to work. The developers have created a `.inputObjects` function that will fill in these **Inputs** with defaults if the user hasn't supplied them (using `!SpaDES.core::suppliedElsewhere`). 

We will look at a few examples in this module:
[Biomass_core::.inputObjects](https://github.com/PredictiveEcology/Biomass_core/blob/d5c214b69f35e7a9f57c59ca7d08329b49328e86/Biomass_core.R#L1964).

First, an object called `studyArea`. [The developer tests whether it exists and creates an error if it does not exist](https://github.com/PredictiveEcology/Biomass_core/blob/d5c214b69f35e7a9f57c59ca7d08329b49328e86/Biomass_core.R#L1972).

Second, some [GIS tests that evaluate whether 2 objects are in the same CRS](https://github.com/PredictiveEcology/Biomass_core/blob/d5c214b69f35e7a9f57c59ca7d08329b49328e86/Biomass_core.R#L2052) (i.e., they need to be the same projection, etc. for this module to work)

Third, if an object is missing, [it may make sense to fill in the details with parameters from the Internet](https://github.com/PredictiveEcology/Biomass_core/blob/d5c214b69f35e7a9f57c59ca7d08329b49328e86/Biomass_core.R#L2066).


## Questions


## See also

See also: [`?expectsInput`](https://rdrr.io/cran/SpaDES.core/man/expectsInput.html), [`?createsOutput`](https://rdrr.io/cran/SpaDES.core/man/createsOutput.html), [`?simInitAndSpades`](https://rdrr.io/cran/SpaDES.core/man/simInitAndSpades.html),
[`?newModule`](https://rdrr.io/cran/SpaDES.core/man/newModule.html)
