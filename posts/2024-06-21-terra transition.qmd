---
title: "Transitioning to `terra` from `raster` -- some advice"
author: "Ceres Barros"
date: last-modified
categories:
  - R
comments: false
---

We have been asked multiple times how we are "dealing with the transition to 
`terra` from the `raster` package". The answer is, somewhat painfully and more slowly
than we had hoped for.

Much of what we do involves manipulating spatial objects (raster or vector data)
be it for data extraction (e.g., extracting data for stastistical modelling), 
results production (e.g., outputting results spatially) or visualisation (e.g., 
making maps) and our packages and SpaDES modules were deeply intertwined with the
`raster` and `sp` packages.

We have started the transition more than a year ago and still haven't finished,
and part of the reason why it takes so long is because we are attempting to keep
backwards compatibility. Which take us to the purpose of this post.

Our advice to others in the same transition journey as us:

-   Try to keep backwards compatibility. Many `terra` functions allow passing
    `Raster*` class objects. Where they don't make your own function wrappers to
    deal with this. We have a few in `reproducible` (on CRAN) and `LandR` (on 
    [GitHub](https://github.com/PredictiveEcology/LandR)) packages.
    
-   Test. A LOT.

That's all really. We have also compiled a table of `raster` to `terra` conversions 
that may be useful. 

<!-- add table here -->

See description of [`terra` methods](https://rspatial.github.io/terra/reference/terra-package.html#xxviii-new-method-names-1)
Ceres
